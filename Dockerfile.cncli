FROM debian:stable-slim AS build

# Install build dependencies
RUN apt-get update -y \
    && apt-get install -y automake build-essential pkg-config libffi-dev libgmp-dev libssl-dev libtinfo-dev libsystemd-dev zlib1g-dev make g++ tmux git jq wget libncursesw6 libtool autoconf musl-tools \
    && apt-get install -y libsqlite3-dev m4 ca-certificates gcc libc6-dev curl \
    && apt-get clean

# Install rust
ENV RUSTUP_HOME=/usr/local/rustup \
    CARGO_HOME=/usr/local/cargo \
    PATH=/usr/local/cargo/bin:$PATH

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
RUN cat /usr/local/cargo/env
RUN rustup install stable \
    && rustup default stable \
    && rustup update \
    && rustup component add clippy rustfmt \
    && rustup target add x86_64-unknown-linux-musl


# Install cncli
ARG VERSION
ARG DOCKER_USER="arradev"
RUN echo "Building tags/v$VERSION..." \
    && git clone --recurse-submodules https://github.com/cardano-community/cncli \
    && cd cncli \
    && git fetch --all --recurse-submodules --tags \
    && git tag \
    && git checkout tags/v$VERSION \
    && cargo install --path . --force \
    && cncli --version

# Run
FROM ${DOCKER_USER}/cardano-node:latest AS node

FROM debian:stable-slim
SHELL ["/bin/bash", "-c"]

# Install dependencies
RUN apt-get update -y \
    && apt-get install -y openssl \
    && apt-get clean

# Install compiled files
COPY --from=build /usr/local/cargo/bin/cncli /bin/cncli

ENTRYPOINT ["cncli"]
