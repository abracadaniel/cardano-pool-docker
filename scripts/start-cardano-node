#!/bin/bash

# Init cardano-node variables
source /scripts/init-node-vars

# Handle IP addresses
export PUBLIC_IP=$(dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | awk -F'"' '{ print $2}')

function help {
    echo "Arguments:"
    echo "--start                       Start node."
    echo "--cli                         Start command-line interface."
    echo "--update                      Update the node software."
    echo "--init_config                 Initialize config."
    echo "--generate_address            Generate key and address."
    echo "--help                        Display this message."
    echo "Environment variables:"
    echo "NODE_PORT                     Port of node. Default: 3000."
    echo "NODE_NAME                     Name of node. Default: node1."
    echo "NODE_TOPOLOGY                 Topology of the node. Should be comma separated for each individual node to add, on the form: <ip>:<port>/<valency>. So for example: 127.0.0.1:3001/1,127.0.0.1:3002/1."
    echo "NODE_RELAY                    Set to True if default IOHK relay should be added to the network topology. Default: False."
    echo "CARDANO_NETWORK               Carano network to use (main, test, pioneer). Default: main."
    echo "EKG_PORT                      Port of EKG monitoring. Default: 12788."
    echo "PROMETHEUS_PORT               Port of Prometheus monitoring. Default: 12798."
    echo "RESOLVE_HOSTNAMES             Resolve topology hostnames to IP-addresses. Default: False."
    echo "REPLACE_EXISTING_CONFIG       Reset and replace existing configs. Default: False."

    exit
}

# function node_info {
#     echo "Running cardano-node on ${CARDANO_NETWORK} network"
#     echo "Node name: ${NODE_NAME}"
#     echo "Public IP: ${PUBLIC_IP}"
#     echo "Node Port: ${NODE_PORT}"
#     echo "Node path: ${NODE_PATH}"
#     echo "EKG Port: ${EKG_PORT}"
#     echo "Prometheus Port: ${PROMETHEUS_PORT}"
# }

# function init_config {
#     python3 /scripts/init_config.py
# }

# function start_node {
#     echo "Starting cardano-node"
#     node_info
#     init_config
#     cardano-node run \
#         --topology ${NODE_PATH}/topology.json \
#         --database-path ${NODE_PATH}/db \
#         --socket-path ${CARDANO_NODE_SOCKET_PATH} \
#         --host-addr 0.0.0.0 \
#         --port ${NODE_PORT} \
#         --config ${NODE_PATH}/config.json
# }

# for i in "$@"
# do
# case $i in
#     --help)
#         help
#         break
#     ;;
#     --update)
#         /scripts/update-cardano-node
#     ;;
#     --cli)
#         /bin/bash
#         break
#     ;;
#     --init_config)
#         init_config
#     ;;
#     --generate_address)
#         /scripts/generate_address
#     ;;
#     --start)
#         START_NODE=1
#     ;;
#     *)
#         break
#     ;;
# esac
# done
# if [ -z "$1" ]; then
#     help
# fi

# if [ -n "$START_NODE" ]; then
#     start_node
# fi

# CMD [
# "cardano-node",
# "run",
# "--topology",
# "ff-topology.json",
# "--socket-path",
# "db/node.socket",
# "--config",
# "ff-config.json",
# "--database-path",
# "db",
# "--port",
# "3001"
# ]

function start_node {
    network_prefix="$1"
    echo "Starting cardano-node with network prefix: $network_prefix"
    cardano-node run \
        --topology ${network_prefix}.json \
        --database-path db \
        --socket-path db/node.socket \
        --port 3001 \
        --config ${network_prefix}.json
}

start_node